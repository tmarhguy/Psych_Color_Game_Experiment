{"ast":null,"code":"var _jsxFileName = \"/Users/tyronemarhguy/Desktop/Color-Comm-Game-Psych-Experiment/src/components/TimerDisplay/TimerDisplay.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TimerDisplay = ({\n  timer,\n  setTimer,\n  onTimerEnd\n}) => {\n  _s();\n  // Timer logic\n  useEffect(() => {\n    if (timer > 0) {\n      const interval = setInterval(() => {\n        setTimer(prevTimer => prevTimer - 1);\n      }, 1000);\n      return () => clearInterval(interval); // Cleanup interval on unmount or when timer changes\n    } else {\n      onTimerEnd(); // Call the provided callback when timer reaches zero\n    }\n  }, [timer, setTimer, onTimerEnd]);\n\n  // This component renders the timer display\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    style: {\n      fontSize: \"2em\",\n      fontWeight: \"bold\"\n    },\n    children: timer > 0 ? `Timer: ${timer}s` : \"Time's up!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(TimerDisplay, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = TimerDisplay;\nexport default TimerDisplay;\nvar _c;\n$RefreshReg$(_c, \"TimerDisplay\");","map":{"version":3,"names":["useEffect","jsxDEV","_jsxDEV","TimerDisplay","timer","setTimer","onTimerEnd","_s","interval","setInterval","prevTimer","clearInterval","style","fontSize","fontWeight","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tyronemarhguy/Desktop/Color-Comm-Game-Psych-Experiment/src/components/TimerDisplay/TimerDisplay.jsx"],"sourcesContent":["import { useEffect } from \"react\";\n\nconst TimerDisplay = ({ timer, setTimer, onTimerEnd }) => {\n  // Timer logic\n  useEffect(() => {\n    if (timer > 0) {\n      const interval = setInterval(() => {\n        setTimer((prevTimer) => prevTimer - 1);\n      }, 1000);\n\n      return () => clearInterval(interval); // Cleanup interval on unmount or when timer changes\n    } else {\n      onTimerEnd(); // Call the provided callback when timer reaches zero\n    }\n  }, [timer, setTimer, onTimerEnd]);\n\n  // This component renders the timer display\n  return (\n    <p style={{ fontSize: \"2em\", fontWeight: \"bold\" }}>\n      {timer > 0 ? `Timer: ${timer}s` : \"Time's up!\"}\n    </p>\n  );\n};\n\nexport default TimerDisplay;\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,YAAY,GAAGA,CAAC;EAAEC,KAAK;EAAEC,QAAQ;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EACxD;EACAP,SAAS,CAAC,MAAM;IACd,IAAII,KAAK,GAAG,CAAC,EAAE;MACb,MAAMI,QAAQ,GAAGC,WAAW,CAAC,MAAM;QACjCJ,QAAQ,CAAEK,SAAS,IAAKA,SAAS,GAAG,CAAC,CAAC;MACxC,CAAC,EAAE,IAAI,CAAC;MAER,OAAO,MAAMC,aAAa,CAACH,QAAQ,CAAC,CAAC,CAAC;IACxC,CAAC,MAAM;MACLF,UAAU,CAAC,CAAC,CAAC,CAAC;IAChB;EACF,CAAC,EAAE,CAACF,KAAK,EAAEC,QAAQ,EAAEC,UAAU,CAAC,CAAC;;EAEjC;EACA,oBACEJ,OAAA;IAAGU,KAAK,EAAE;MAAEC,QAAQ,EAAE,KAAK;MAAEC,UAAU,EAAE;IAAO,CAAE;IAAAC,QAAA,EAC/CX,KAAK,GAAG,CAAC,GAAG,UAAUA,KAAK,GAAG,GAAG;EAAY;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CAAC;AAER,CAAC;AAACZ,EAAA,CApBIJ,YAAY;AAAAiB,EAAA,GAAZjB,YAAY;AAsBlB,eAAeA,YAAY;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}