{"ast":null,"code":"var _jsxFileName = \"/Users/tyronemarhguy/Desktop/Color-Comm-Game-Psych-Experiment/src/components/TimerDisplay/TimerDisplay.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./TimerDisplay.css\"; // Import the CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TimerDisplay({\n  initialTime = 10,\n  onTimerEnd\n}) {\n  _s();\n  const [timer, setTimer] = useState(initialTime); // Initialize the timer with the provided initial time\n\n  useEffect(() => {\n    if (timer > 0) {\n      const interval = setInterval(() => {\n        setTimer(prevTimer => prevTimer - 1); // Decrement timer by 1\n      }, 1000);\n      return () => clearInterval(interval); // Cleanup interval on unmount or when timer changes\n    } else if (onTimerEnd) {\n      onTimerEnd(); // Notify the parent when the timer reaches zero\n    }\n  }, [timer, onTimerEnd]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"timer-container\",\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"timer-text\",\n      children: timer > 0 ? `Timer: ${timer}s` : \"Time's up!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(TimerDisplay, \"GNAt9k3G1dRo/jeCgmV7symPNqM=\");\n_c = TimerDisplay;\nvar _c;\n$RefreshReg$(_c, \"TimerDisplay\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TimerDisplay","initialTime","onTimerEnd","_s","timer","setTimer","interval","setInterval","prevTimer","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tyronemarhguy/Desktop/Color-Comm-Game-Psych-Experiment/src/components/TimerDisplay/TimerDisplay.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./TimerDisplay.css\"; // Import the CSS file for styling\n\nexport default function TimerDisplay({ initialTime = 10, onTimerEnd }) {\n  const [timer, setTimer] = useState(initialTime); // Initialize the timer with the provided initial time\n\n  useEffect(() => {\n    if (timer > 0) {\n      const interval = setInterval(() => {\n        setTimer((prevTimer) => prevTimer - 1); // Decrement timer by 1\n      }, 1000);\n\n      return () => clearInterval(interval); // Cleanup interval on unmount or when timer changes\n    } else if (onTimerEnd) {\n      onTimerEnd(); // Notify the parent when the timer reaches zero\n    }\n  }, [timer, onTimerEnd]);\n\n  return (\n    <div className=\"timer-container\">\n      <p className=\"timer-text\">\n        {timer > 0 ? `Timer: ${timer}s` : \"Time's up!\"}\n      </p>\n    </div>\n  );\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,oBAAoB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7B,eAAe,SAASC,YAAYA,CAAC;EAAEC,WAAW,GAAG,EAAE;EAAEC;AAAW,CAAC,EAAE;EAAAC,EAAA;EACrE,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAACK,WAAW,CAAC,CAAC,CAAC;;EAEjDJ,SAAS,CAAC,MAAM;IACd,IAAIO,KAAK,GAAG,CAAC,EAAE;MACb,MAAME,QAAQ,GAAGC,WAAW,CAAC,MAAM;QACjCF,QAAQ,CAAEG,SAAS,IAAKA,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC;MAC1C,CAAC,EAAE,IAAI,CAAC;MAER,OAAO,MAAMC,aAAa,CAACH,QAAQ,CAAC,CAAC,CAAC;IACxC,CAAC,MAAM,IAAIJ,UAAU,EAAE;MACrBA,UAAU,CAAC,CAAC,CAAC,CAAC;IAChB;EACF,CAAC,EAAE,CAACE,KAAK,EAAEF,UAAU,CAAC,CAAC;EAEvB,oBACEH,OAAA;IAAKW,SAAS,EAAC,iBAAiB;IAAAC,QAAA,eAC9BZ,OAAA;MAAGW,SAAS,EAAC,YAAY;MAAAC,QAAA,EACtBP,KAAK,GAAG,CAAC,GAAG,UAAUA,KAAK,GAAG,GAAG;IAAY;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV;AAACZ,EAAA,CAtBuBH,YAAY;AAAAgB,EAAA,GAAZhB,YAAY;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}