{"ast":null,"code":"var _jsxFileName = \"/Users/tyronemarhguy/Desktop/Color-Comm-Game-Psych-Experiment/src/components/TimerDisplay/TimerDisplay.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport \"./TimerDisplay.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TimerDisplay({\n  initialTime = 10,\n  onTimerEnd\n}) {\n  _s();\n  const [timer, setTimer] = React.useState(initialTime);\n  const [isEnding, setIsEnding] = React.useState(false);\n  const canvasRef = useRef(null);\n\n  // Timer countdown logic\n  useEffect(() => {\n    if (timer > 0) {\n      const interval = setInterval(() => {\n        setTimer(prevTimer => prevTimer - 1);\n\n        // Add warning effect when timer is low\n        if (timer <= 3 && !isEnding) {\n          setIsEnding(true);\n        }\n      }, 1000);\n      return () => clearInterval(interval);\n    } else if (onTimerEnd) {\n      onTimerEnd();\n    }\n  }, [timer, onTimerEnd, isEnding]);\n\n  // Draw circular progress\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n    const width = canvas.width;\n    const height = canvas.height;\n    const centerX = width / 2;\n    const centerY = height / 2;\n    const radius = Math.min(centerX, centerY) * 0.85;\n    const lineWidth = radius * 0.15;\n    const timeRatio = timer / initialTime;\n\n    // Clear canvas\n    ctx.clearRect(0, 0, width, height);\n\n    // Draw background circle (light gray)\n    ctx.beginPath();\n    ctx.arc(centerX, centerY, radius, 0, 2 * Math.PI);\n    ctx.lineWidth = lineWidth;\n    ctx.strokeStyle = '#e0e0e0';\n    ctx.stroke();\n\n    // Draw colored progress arc\n    if (timeRatio > 0) {\n      // Calculate color based on remaining time\n      let color;\n      if (timeRatio > 0.6) {\n        color = '#00CC00'; // Green\n      } else if (timeRatio > 0.3) {\n        color = '#FFCC00'; // Yellow\n      } else {\n        color = '#FF3333'; // Red\n      }\n\n      // Draw arc from top (-90° or -π/2) clockwise\n      const startAngle = -Math.PI / 2;\n      const endAngle = startAngle + 2 * Math.PI * timeRatio;\n      ctx.beginPath();\n      ctx.arc(centerX, centerY, radius, startAngle, endAngle);\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = color;\n      ctx.lineCap = 'round';\n      ctx.stroke();\n    }\n  }, [timer, initialTime]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"timer-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer-progress\",\n      style: {\n        transform: `scaleX(${timer / initialTime})`,\n        opacity: timer > 3 ? 0.3 : 0.5\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: 200,\n      height: 200,\n      style: {\n        position: 'absolute',\n        zIndex: 3,\n        width: '80%',\n        height: '80%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer-content\",\n      children: timer > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timer-seconds\",\n          style: {\n            color: timer <= 3 ? '#ff3333' : '#333'\n          },\n          children: timer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timer-label\",\n          children: \"seconds remaining\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"times-up\",\n        children: \"Time's up!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(TimerDisplay, \"XLjN9ESi0HbyPFec0oIKhIP9o9E=\");\n_c = TimerDisplay;\nvar _c;\n$RefreshReg$(_c, \"TimerDisplay\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","TimerDisplay","initialTime","onTimerEnd","_s","timer","setTimer","useState","isEnding","setIsEnding","canvasRef","interval","setInterval","prevTimer","clearInterval","canvas","current","ctx","getContext","width","height","centerX","centerY","radius","Math","min","lineWidth","timeRatio","clearRect","beginPath","arc","PI","strokeStyle","stroke","color","startAngle","endAngle","lineCap","className","children","style","transform","opacity","fileName","_jsxFileName","lineNumber","columnNumber","ref","position","zIndex","_c","$RefreshReg$"],"sources":["/Users/tyronemarhguy/Desktop/Color-Comm-Game-Psych-Experiment/src/components/TimerDisplay/TimerDisplay.jsx"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport \"./TimerDisplay.css\";\n\nexport default function TimerDisplay({ initialTime = 10, onTimerEnd }) {\n  const [timer, setTimer] = React.useState(initialTime);\n  const [isEnding, setIsEnding] = React.useState(false);\n  const canvasRef = useRef(null);\n  \n  // Timer countdown logic\n  useEffect(() => {\n    if (timer > 0) {\n      const interval = setInterval(() => {\n        setTimer((prevTimer) => prevTimer - 1);\n        \n        // Add warning effect when timer is low\n        if (timer <= 3 && !isEnding) {\n          setIsEnding(true);\n        }\n      }, 1000);\n\n      return () => clearInterval(interval);\n    } else if (onTimerEnd) {\n      onTimerEnd();\n    }\n  }, [timer, onTimerEnd, isEnding]);\n\n  // Draw circular progress\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    \n    const ctx = canvas.getContext('2d');\n    const width = canvas.width;\n    const height = canvas.height;\n    const centerX = width / 2;\n    const centerY = height / 2;\n    const radius = Math.min(centerX, centerY) * 0.85;\n    const lineWidth = radius * 0.15;\n    const timeRatio = timer / initialTime;\n    \n    // Clear canvas\n    ctx.clearRect(0, 0, width, height);\n    \n    // Draw background circle (light gray)\n    ctx.beginPath();\n    ctx.arc(centerX, centerY, radius, 0, 2 * Math.PI);\n    ctx.lineWidth = lineWidth;\n    ctx.strokeStyle = '#e0e0e0';\n    ctx.stroke();\n    \n    // Draw colored progress arc\n    if (timeRatio > 0) {\n      // Calculate color based on remaining time\n      let color;\n      if (timeRatio > 0.6) {\n        color = '#00CC00'; // Green\n      } else if (timeRatio > 0.3) {\n        color = '#FFCC00'; // Yellow\n      } else {\n        color = '#FF3333'; // Red\n      }\n      \n      // Draw arc from top (-90° or -π/2) clockwise\n      const startAngle = -Math.PI / 2;\n      const endAngle = startAngle + (2 * Math.PI * timeRatio);\n      \n      ctx.beginPath();\n      ctx.arc(centerX, centerY, radius, startAngle, endAngle);\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = color;\n      ctx.lineCap = 'round';\n      ctx.stroke();\n    }\n  }, [timer, initialTime]);\n\n  return (\n    <div className=\"timer-container\">\n      {/* Rainbow progress bar (still included for background effect) */}\n      <div \n        className=\"timer-progress\" \n        style={{ \n          transform: `scaleX(${timer / initialTime})`,\n          opacity: timer > 3 ? 0.3 : 0.5\n        }}\n      />\n      \n      {/* Circular progress canvas */}\n      <canvas \n        ref={canvasRef} \n        width={200} \n        height={200} \n        style={{\n          position: 'absolute',\n          zIndex: 3,\n          width: '80%',\n          height: '80%'\n        }}\n      />\n      \n      {/* Timer text display */}\n      <div className=\"timer-content\">\n        {timer > 0 ? (\n          <>\n            <div className=\"timer-seconds\" style={{ \n              color: timer <= 3 ? '#ff3333' : '#333' \n            }}>\n              {timer}\n            </div>\n            <div className=\"timer-label\">\n              seconds remaining\n            </div>\n          </>\n        ) : (\n          <div className=\"times-up\">Time's up!</div>\n        )}\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}