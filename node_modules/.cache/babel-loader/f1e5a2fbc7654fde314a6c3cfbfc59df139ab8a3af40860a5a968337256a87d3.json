{"ast":null,"code":"var _jsxFileName = \"/Users/tyronemarhguy/Desktop/Color-Comm-Game-Psych-Experiment/src/components/TimerDisplay/TimerDisplay.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport \"./TimerDisplay.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TimerDisplay({\n  initialTime = 10,\n  onTimerEnd\n}) {\n  _s();\n  const [timer, setTimer] = useState(initialTime);\n  const canvasRef = useRef(null);\n  const containerRef = useRef(null);\n\n  // Timer countdown logic\n  useEffect(() => {\n    if (timer > 0) {\n      const interval = setInterval(() => setTimer(t => t - 1), 1000);\n      return () => clearInterval(interval);\n    } else if (onTimerEnd) {\n      onTimerEnd();\n    }\n  }, [timer, onTimerEnd]);\n\n  // Draw the circular countdown ring\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const container = containerRef.current;\n    if (!canvas || !container) return;\n\n    // Set canvas dimensions with high-DPI support\n    const dpr = window.devicePixelRatio || 1;\n    const rect = container.getBoundingClientRect();\n\n    // Set canvas dimensions considering device pixel ratio\n    canvas.width = rect.width * dpr;\n    canvas.height = rect.height * dpr;\n\n    // Get context and scale for high-DPI\n    const ctx = canvas.getContext(\"2d\");\n    ctx.scale(dpr, dpr);\n    const centerX = rect.width / 2;\n    const centerY = rect.height / 2;\n    const radius = Math.min(centerX, centerY) * 0.8;\n    const lineWidth = radius * 0.18;\n    const timeRatio = timer / initialTime;\n\n    // Clear canvas\n    ctx.clearRect(0, 0, rect.width, rect.height);\n\n    // Draw background ring (light gray)\n    ctx.beginPath();\n    ctx.arc(centerX, centerY, radius, 0, 2 * Math.PI);\n    ctx.lineWidth = lineWidth;\n    ctx.strokeStyle = \"#e0e0e0\";\n    ctx.stroke();\n\n    // Color logic: green → yellow → red\n    let color;\n    if (timeRatio > 0.6) color = \"#00CC00\";else if (timeRatio > 0.3) color = \"#FFCC00\";else color = \"#FF3333\";\n\n    // Draw the countdown arc (clockwise)\n    if (timeRatio > 0) {\n      const startAngle = -Math.PI / 2;\n      const endAngle = startAngle + 2 * Math.PI * timeRatio;\n      ctx.beginPath();\n      ctx.arc(centerX, centerY, radius, startAngle, endAngle, false);\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = color;\n      ctx.lineCap = \"round\";\n      ctx.stroke();\n    }\n\n    // Draw timer text in the center\n    ctx.fillStyle = timer <= 3 ? \"#ff3333\" : \"#333333\";\n    ctx.font = `bold ${Math.floor(radius * 0.6)}px 'Segoe UI', Arial, sans-serif`;\n    ctx.textAlign = \"center\";\n    ctx.textBaseline = \"middle\";\n    ctx.shadowColor = \"rgba(0,0,0,0.1)\";\n    ctx.shadowBlur = 4;\n    ctx.fillText(timer > 0 ? timer : \"0\", centerX, centerY);\n    ctx.shadowBlur = 0;\n  }, [timer, initialTime]);\n\n  // Handle resize events\n  useEffect(() => {\n    const handleResize = () => {\n      // Trigger canvas redraw when window resizes\n      const canvas = canvasRef.current;\n      if (canvas) {\n        // Force redraw by creating a minimal change\n        setTimer(prev => prev);\n      }\n    };\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"timer-container\",\n    ref: containerRef,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer-border\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      className: \"timer-canvas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer-label\",\n      children: timer > 0 ? \"seconds remaining\" : \"Time's up!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n_s(TimerDisplay, \"4SzcgdA+ciZmLDFLmQ5hLCLRGc0=\");\n_c = TimerDisplay;\nvar _c;\n$RefreshReg$(_c, \"TimerDisplay\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","TimerDisplay","initialTime","onTimerEnd","_s","timer","setTimer","canvasRef","containerRef","interval","setInterval","t","clearInterval","canvas","current","container","dpr","window","devicePixelRatio","rect","getBoundingClientRect","width","height","ctx","getContext","scale","centerX","centerY","radius","Math","min","lineWidth","timeRatio","clearRect","beginPath","arc","PI","strokeStyle","stroke","color","startAngle","endAngle","lineCap","fillStyle","font","floor","textAlign","textBaseline","shadowColor","shadowBlur","fillText","handleResize","prev","addEventListener","removeEventListener","className","ref","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tyronemarhguy/Desktop/Color-Comm-Game-Psych-Experiment/src/components/TimerDisplay/TimerDisplay.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport \"./TimerDisplay.css\";\n\nexport default function TimerDisplay({ initialTime = 10, onTimerEnd }) {\n  const [timer, setTimer] = useState(initialTime);\n  const canvasRef = useRef(null);\n  const containerRef = useRef(null);\n\n  // Timer countdown logic\n  useEffect(() => {\n    if (timer > 0) {\n      const interval = setInterval(() => setTimer((t) => t - 1), 1000);\n      return () => clearInterval(interval);\n    } else if (onTimerEnd) {\n      onTimerEnd();\n    }\n  }, [timer, onTimerEnd]);\n\n  // Draw the circular countdown ring\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const container = containerRef.current;\n    if (!canvas || !container) return;\n    \n    // Set canvas dimensions with high-DPI support\n    const dpr = window.devicePixelRatio || 1;\n    const rect = container.getBoundingClientRect();\n    \n    // Set canvas dimensions considering device pixel ratio\n    canvas.width = rect.width * dpr;\n    canvas.height = rect.height * dpr;\n    \n    // Get context and scale for high-DPI\n    const ctx = canvas.getContext(\"2d\");\n    ctx.scale(dpr, dpr);\n    \n    const centerX = rect.width / 2;\n    const centerY = rect.height / 2;\n    const radius = Math.min(centerX, centerY) * 0.8;\n    const lineWidth = radius * 0.18;\n    const timeRatio = timer / initialTime;\n\n    // Clear canvas\n    ctx.clearRect(0, 0, rect.width, rect.height);\n\n    // Draw background ring (light gray)\n    ctx.beginPath();\n    ctx.arc(centerX, centerY, radius, 0, 2 * Math.PI);\n    ctx.lineWidth = lineWidth;\n    ctx.strokeStyle = \"#e0e0e0\";\n    ctx.stroke();\n\n    // Color logic: green → yellow → red\n    let color;\n    if (timeRatio > 0.6) color = \"#00CC00\";\n    else if (timeRatio > 0.3) color = \"#FFCC00\";\n    else color = \"#FF3333\";\n\n    // Draw the countdown arc (clockwise)\n    if (timeRatio > 0) {\n      const startAngle = -Math.PI / 2;\n      const endAngle = startAngle + 2 * Math.PI * timeRatio;\n      ctx.beginPath();\n      ctx.arc(centerX, centerY, radius, startAngle, endAngle, false);\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = color;\n      ctx.lineCap = \"round\";\n      ctx.stroke();\n    }\n\n    // Draw timer text in the center\n    ctx.fillStyle = timer <= 3 ? \"#ff3333\" : \"#333333\";\n    ctx.font = `bold ${Math.floor(radius * 0.6)}px 'Segoe UI', Arial, sans-serif`;\n    ctx.textAlign = \"center\";\n    ctx.textBaseline = \"middle\";\n    ctx.shadowColor = \"rgba(0,0,0,0.1)\";\n    ctx.shadowBlur = 4;\n    ctx.fillText(timer > 0 ? timer : \"0\", centerX, centerY);\n    ctx.shadowBlur = 0;\n  }, [timer, initialTime]);\n\n  // Handle resize events\n  useEffect(() => {\n    const handleResize = () => {\n      // Trigger canvas redraw when window resizes\n      const canvas = canvasRef.current;\n      if (canvas) {\n        // Force redraw by creating a minimal change\n        setTimer(prev => prev);\n      }\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return (\n    <div className=\"timer-container\" ref={containerRef}>\n      <div className=\"timer-border\"></div>\n      <canvas ref={canvasRef} className=\"timer-canvas\" />\n      <div className=\"timer-label\">\n        {timer > 0 ? \"seconds remaining\" : \"Time's up!\"}\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}