{"ast":null,"code":"var _jsxFileName = \"/Users/tyronemarhguy/Desktop/Color-Comm-Game-Psych-Experiment/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./assets/styles/main.css\";\nimport { colorDistance } from \"./utils/colorUtils\";\nimport SenderScreen from \"./screens/SenderScreen\";\nimport ReceiverScreen from \"./screens/ReceiverScreen\";\nimport TimerDisplay from \"./components/TimerDisplay/TimerDisplay\";\n\n// Animal images\nimport dog from \"./assets/images/dog.jpg\";\nimport butterfly from \"./assets/images/butterfly.jpg\";\nimport giraffe from \"./assets/images/giraffe.png\";\nimport deer from \"./assets/images/deer.png\";\nimport elephant from \"./assets/images/elephant.jpg\";\n\n// Animal data\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ANIMALS = [{\n  name: \"Dog\",\n  image: dog,\n  color: \"#deb887\"\n}, {\n  name: \"Giraffe\",\n  image: giraffe,\n  color: \"#f4e285\"\n}, {\n  name: \"Butterfly\",\n  image: butterfly,\n  color: \"#ff69b4\"\n}, {\n  name: \"Deer\",\n  image: deer,\n  color: \"#a0522d\"\n}, {\n  name: \"Elephant\",\n  image: elephant,\n  color: \"#b0b0b0\"\n}];\nconst COLOR_TOLERANCE = 60;\nexport default function App() {\n  _s();\n  const [role, setRole] = useState(\"sender\");\n  const [senderColor, setSenderColor] = useState(\"#FFFFFF\");\n  const [score, setScore] = useState(0);\n  const [timer, setTimer] = useState(10);\n  const [refreshPositions, setRefreshPositions] = useState(0);\n  const [selectedAnimalIndex, setSelectedAnimalIndex] = useState(0);\n  const timeoutRef = useRef(null);\n  const roleRef = useRef(role);\n\n  // Sync roleRef with current role\n  useEffect(() => {\n    roleRef.current = role;\n  }, [role]);\n\n  // Cleanup timeouts on unmount\n  useEffect(() => {\n    return () => {\n      if (timeoutRef.current) clearTimeout(timeoutRef.current);\n    };\n  }, []);\n  const handleTimerEnd = () => {\n    const currentRole = roleRef.current;\n    const newRole = currentRole === \"sender\" ? \"receiver\" : \"sender\";\n    setRole(newRole);\n    setTimer(10);\n    setRefreshPositions(prev => prev + 1);\n\n    // Immediately reset color when switching to sender\n    if (newRole === \"sender\") {\n      setSenderColor(\"#FFFFFF\");\n      if (timeoutRef.current) clearTimeout(timeoutRef.current);\n    }\n  };\n  const handleColorChange = newColor => {\n    // Clear existing timeout\n    if (timeoutRef.current) clearTimeout(timeoutRef.current);\n    setSenderColor(newColor);\n    setRole(\"receiver\");\n    setTimer(10);\n    setRefreshPositions(prev => prev + 1);\n\n    // Set new timeout to reset color\n    timeoutRef.current = setTimeout(() => {\n      setSenderColor(\"#FFFFFF\");\n    }, 2000);\n  };\n  const handleColorMatch = animalColor => {\n    // Clear existing timeout\n    if (timeoutRef.current) clearTimeout(timeoutRef.current);\n    const distance = colorDistance(senderColor, animalColor);\n    if (distance <= COLOR_TOLERANCE) {\n      setScore(prevScore => prevScore + 1);\n    }\n    setRole(\"sender\");\n    setTimer(10);\n    setRefreshPositions(prev => prev + 1);\n\n    // Set new timeout to reset color\n    timeoutRef.current = setTimeout(() => {\n      setSenderColor(\"#FFFFFF\");\n    }, 2000);\n  };\n  const handleKeyDown = event => {\n    if (role !== \"receiver\") return;\n    if (event.key === \"ArrowRight\" || event.key === \"ArrowDown\") {\n      setSelectedAnimalIndex(prevIndex => (prevIndex + 1) % ANIMALS.length);\n    } else if (event.key === \"ArrowLeft\" || event.key === \"ArrowUp\") {\n      setSelectedAnimalIndex(prevIndex => (prevIndex - 1 + ANIMALS.length) % ANIMALS.length);\n    } else if (event.key === \"Enter\") {\n      handleColorMatch(ANIMALS[selectedAnimalIndex].color);\n    }\n  };\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleKeyDown);\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\n  }, [role, selectedAnimalIndex]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-root\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"unified-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vertical-divider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"horizontal-divider-top\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"horizontal-divider-bottom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vertical-divider-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"horizontal-divider-middle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), role === \"sender\" ? /*#__PURE__*/_jsxDEV(SenderScreen, {\n        animals: ANIMALS,\n        refreshPositions: refreshPositions,\n        timer: timer,\n        senderColor: senderColor,\n        score: score,\n        onColorChange: handleColorChange,\n        timerDisplay: /*#__PURE__*/_jsxDEV(TimerDisplay, {\n          timer: timer,\n          setTimer: setTimer,\n          onTimerEnd: handleTimerEnd\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(ReceiverScreen, {\n        animals: ANIMALS,\n        refreshPositions: refreshPositions,\n        timer: timer,\n        senderColor: senderColor,\n        score: score,\n        selectedAnimalIndex: selectedAnimalIndex,\n        onAnimalSelect: animal => handleColorMatch(animal.color),\n        timerDisplay: /*#__PURE__*/_jsxDEV(TimerDisplay, {\n          timer: timer,\n          setTimer: setTimer,\n          onTimerEnd: handleTimerEnd\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"2zDbgx0SRh1xDWoF2JgcSgrwLfE=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","colorDistance","SenderScreen","ReceiverScreen","TimerDisplay","dog","butterfly","giraffe","deer","elephant","jsxDEV","_jsxDEV","ANIMALS","name","image","color","COLOR_TOLERANCE","App","_s","role","setRole","senderColor","setSenderColor","score","setScore","timer","setTimer","refreshPositions","setRefreshPositions","selectedAnimalIndex","setSelectedAnimalIndex","timeoutRef","roleRef","current","clearTimeout","handleTimerEnd","currentRole","newRole","prev","handleColorChange","newColor","setTimeout","handleColorMatch","animalColor","distance","prevScore","handleKeyDown","event","key","prevIndex","length","window","addEventListener","removeEventListener","className","children","fileName","_jsxFileName","lineNumber","columnNumber","animals","onColorChange","timerDisplay","onTimerEnd","onAnimalSelect","animal","_c","$RefreshReg$"],"sources":["/Users/tyronemarhguy/Desktop/Color-Comm-Game-Psych-Experiment/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport \"./assets/styles/main.css\";\nimport { colorDistance } from \"./utils/colorUtils\";\nimport SenderScreen from \"./screens/SenderScreen\";\nimport ReceiverScreen from \"./screens/ReceiverScreen\";\nimport TimerDisplay from \"./components/TimerDisplay/TimerDisplay\";\n\n// Animal images\nimport dog from \"./assets/images/dog.jpg\";\nimport butterfly from \"./assets/images/butterfly.jpg\";\nimport giraffe from \"./assets/images/giraffe.png\";\nimport deer from \"./assets/images/deer.png\";\nimport elephant from \"./assets/images/elephant.jpg\";\n\n// Animal data\nconst ANIMALS = [\n  { name: \"Dog\", image: dog, color: \"#deb887\" },\n  { name: \"Giraffe\", image: giraffe, color: \"#f4e285\" },\n  { name: \"Butterfly\", image: butterfly, color: \"#ff69b4\" },\n  { name: \"Deer\", image: deer, color: \"#a0522d\" },\n  { name: \"Elephant\", image: elephant, color: \"#b0b0b0\" },\n];\n\nconst COLOR_TOLERANCE = 60;\n\nexport default function App() {\n  const [role, setRole] = useState(\"sender\");\n  const [senderColor, setSenderColor] = useState(\"#FFFFFF\");\n  const [score, setScore] = useState(0);\n  const [timer, setTimer] = useState(10);\n  const [refreshPositions, setRefreshPositions] = useState(0);\n  const [selectedAnimalIndex, setSelectedAnimalIndex] = useState(0);\n  const timeoutRef = useRef(null);\n  const roleRef = useRef(role);\n\n  // Sync roleRef with current role\n  useEffect(() => {\n    roleRef.current = role;\n  }, [role]);\n\n  // Cleanup timeouts on unmount\n  useEffect(() => {\n    return () => {\n      if (timeoutRef.current) clearTimeout(timeoutRef.current);\n    };\n  }, []);\n\n  const handleTimerEnd = () => {\n    const currentRole = roleRef.current;\n    const newRole = currentRole === \"sender\" ? \"receiver\" : \"sender\";\n    \n    setRole(newRole);\n    setTimer(10);\n    setRefreshPositions((prev) => prev + 1);\n\n    // Immediately reset color when switching to sender\n    if (newRole === \"sender\") {\n      setSenderColor(\"#FFFFFF\");\n      if (timeoutRef.current) clearTimeout(timeoutRef.current);\n    }\n  };\n\n  const handleColorChange = (newColor) => {\n    // Clear existing timeout\n    if (timeoutRef.current) clearTimeout(timeoutRef.current);\n    \n    setSenderColor(newColor);\n    setRole(\"receiver\");\n    setTimer(10);\n    setRefreshPositions((prev) => prev + 1);\n\n    // Set new timeout to reset color\n    timeoutRef.current = setTimeout(() => {\n      setSenderColor(\"#FFFFFF\");\n    }, 2000);\n  };\n\n  const handleColorMatch = (animalColor) => {\n    // Clear existing timeout\n    if (timeoutRef.current) clearTimeout(timeoutRef.current);\n    \n    const distance = colorDistance(senderColor, animalColor);\n    if (distance <= COLOR_TOLERANCE) {\n      setScore((prevScore) => prevScore + 1);\n    }\n    \n    setRole(\"sender\");\n    setTimer(10);\n    setRefreshPositions((prev) => prev + 1);\n\n    // Set new timeout to reset color\n    timeoutRef.current = setTimeout(() => {\n      setSenderColor(\"#FFFFFF\");\n    }, 2000);\n  };\n\n  const handleKeyDown = (event) => {\n    if (role !== \"receiver\") return;\n\n    if (event.key === \"ArrowRight\" || event.key === \"ArrowDown\") {\n      setSelectedAnimalIndex((prevIndex) => (prevIndex + 1) % ANIMALS.length);\n    } else if (event.key === \"ArrowLeft\" || event.key === \"ArrowUp\") {\n      setSelectedAnimalIndex((prevIndex) =>\n        (prevIndex - 1 + ANIMALS.length) % ANIMALS.length\n      );\n    } else if (event.key === \"Enter\") {\n      handleColorMatch(ANIMALS[selectedAnimalIndex].color);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleKeyDown);\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\n  }, [role, selectedAnimalIndex]);\n\n  return (\n    <div className=\"app-root\">\n      <div className=\"unified-container\">\n        <div className=\"vertical-divider\"></div>\n        <div className=\"horizontal-divider-top\"></div>\n        <div className=\"horizontal-divider-bottom\"></div>\n        <div className=\"vertical-divider-2\"></div>\n        <div className=\"horizontal-divider-middle\"></div>\n\n        {role === \"sender\" ? (\n          <SenderScreen\n            animals={ANIMALS}\n            refreshPositions={refreshPositions}\n            timer={timer}\n            senderColor={senderColor}\n            score={score}\n            onColorChange={handleColorChange}\n            timerDisplay={\n              <TimerDisplay\n                timer={timer}\n                setTimer={setTimer}\n                onTimerEnd={handleTimerEnd}\n              />\n            }\n          />\n        ) : (\n          <ReceiverScreen\n            animals={ANIMALS}\n            refreshPositions={refreshPositions}\n            timer={timer}\n            senderColor={senderColor}\n            score={score}\n            selectedAnimalIndex={selectedAnimalIndex}\n            onAnimalSelect={(animal) => handleColorMatch(animal.color)}\n            timerDisplay={\n              <TimerDisplay\n                timer={timer}\n                setTimer={setTimer}\n                onTimerEnd={handleTimerEnd}\n              />\n            }\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}